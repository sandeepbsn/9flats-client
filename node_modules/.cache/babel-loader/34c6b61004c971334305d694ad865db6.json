{"ast":null,"code":"var _jsxFileName = \"/home/sandeep/projects/9flats-final/9flats/client/src/components/Listing/Maps.jsx\";\nimport React from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { Tooltip } from 'react-bootstrap';\n\nclass Maps extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onMapClicked = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      showingInfoWindow: true,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n  }\n\n  onMouseoverMarker(props, marker, e) {\n    console.log(marker);\n  }\n\n  getBounds() {\n    var bounds = new this.props.google.maps.LatLngBounds();\n\n    for (var i = 0; i < this.props.coordinates.length; i++) {\n      let temp = {\n        \"lat\": Number(this.props.coordinates[i]['lat']),\n        \"lng\": Number(this.props.coordinates[i]['lng'])\n      };\n      bounds.extend(temp);\n      return bounds;\n    }\n  }\n\n  render() {\n    const {\n      coordinates\n    } = this.props;\n    console.log(process.env.REACT_APP_MAPS);\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      style: {\n        width: '100%',\n        height: '100%',\n        position: 'relative'\n      },\n      className: 'map',\n      center: {\n        lat: 12.9292117,\n        lng: 77.5696024\n      },\n      initialCenter: {\n        lat: 12.9292117,\n        lng: 77.5696024\n      },\n      bounds: this.getBounds(),\n      zoom: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, coordinates.map(elem => {\n      return /*#__PURE__*/React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        onMouseover: this.onMouseoverMarker,\n        title: elem['name'],\n        lable: elem['price'],\n        name: elem['price'],\n        position: {\n          lat: Number(elem['lat']),\n          lng: Number(elem['lng'])\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      });\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, this.state.selectedPlace.title)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"Rs. \", this.state.selectedPlace.name))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_MAPS\n})(Maps);","map":{"version":3,"sources":["/home/sandeep/projects/9flats-final/9flats/client/src/components/Listing/Maps.jsx"],"names":["React","Map","InfoWindow","Marker","GoogleApiWrapper","Tooltip","Maps","Component","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onMapClicked","state","onMouseoverMarker","console","log","getBounds","bounds","google","maps","LatLngBounds","i","coordinates","length","temp","Number","extend","render","process","env","REACT_APP_MAPS","width","height","position","lat","lng","map","elem","title","name","apiKey"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport {Tooltip} from 'react-bootstrap'\n\nclass Maps extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            showingInfoWindow: true,\n            activeMarker: {},\n            selectedPlace: {},\n        };\n    }\n    onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    onMapClicked = (props) => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            })\n        }\n    };\n    onMouseoverMarker(props, marker, e) {\n        console.log(marker)\n    }\n    \n    getBounds(){\n        var bounds = new this.props.google.maps.LatLngBounds();\n        for (var i = 0; i < this.props.coordinates.length; i++) {\n            let temp = {\n                \"lat\":Number(this.props.coordinates[i]['lat']),\n                \"lng\":Number(this.props.coordinates[i]['lng'])\n            }\n            bounds.extend(temp);\n            return bounds\n        }\n    }\n\n  render() {\n    const {coordinates} = this.props\n    console.log(process.env.REACT_APP_MAPS)\n    console.log(this.state)\n    return (\n      <Map google={this.props.google}\n        style={{width: '100%', height: '100%', position: 'relative'}}\n        className={'map'}\n        center={{\n            lat: 12.9292117,\n            lng: 77.5696024\n        }}\n        initialCenter={{\n            lat: 12.9292117,\n            lng: 77.5696024\n        }}\n        bounds={this.getBounds()}\n        zoom={12}>\n        {coordinates.map(elem=>{\n            return (\n                <Marker\n                onClick={this.onMarkerClick}\n                onMouseover={this.onMouseoverMarker}\n                title={elem['name']}\n                lable={elem['price']}\n                name={elem['price']}\n                position={{lat: Number(elem['lat']), lng: Number(elem['lng'])}}>\n                </Marker>\n            )\n        })}\n        <InfoWindow\n        marker={this.state.activeMarker}\n        visible={this.state.showingInfoWindow}>\n            <div>\n            <h1>{this.state.selectedPlace.title}</h1>\n            </div>\n            <div>\n            <h3>Rs. {this.state.selectedPlace.name}</h3>\n            </div>\n        </InfoWindow>\n    </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: (process.env.REACT_APP_MAPS)\n})(Maps)\n\n"]},"metadata":{},"sourceType":"module"}