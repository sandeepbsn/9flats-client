{"ast":null,"code":"import _classCallCheck from\"/home/sandeep/projects/9flats-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/sandeep/projects/9flats-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/sandeep/projects/9flats-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/sandeep/projects/9flats-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Map,InfoWindow,Marker,GoogleApiWrapper}from'google-maps-react';import{Tooltip}from'react-bootstrap';var Maps=/*#__PURE__*/function(_React$Component){_inherits(Maps,_React$Component);var _super=_createSuper(Maps);function Maps(_props){var _this;_classCallCheck(this,Maps);_this=_super.call(this,_props);_this.onMarkerClick=function(props,marker,e){return _this.setState({selectedPlace:props,activeMarker:marker,showingInfoWindow:true});};_this.onMapClicked=function(props){if(_this.state.showingInfoWindow){_this.setState({showingInfoWindow:false,activeMarker:null});}};_this.state={showingInfoWindow:true,activeMarker:{},selectedPlace:{}};return _this;}_createClass(Maps,[{key:\"onMouseoverMarker\",value:function onMouseoverMarker(props,marker,e){console.log(marker);}},{key:\"getBounds\",value:function getBounds(){var bounds=new this.props.google.maps.LatLngBounds();for(var i=0;i<this.props.coordinates.length;i++){var temp={\"lat\":Number(this.props.coordinates[i]['lat']),\"lng\":Number(this.props.coordinates[i]['lng'])};bounds.extend(temp);return bounds;}}},{key:\"render\",value:function render(){var _this2=this;var coordinates=this.props.coordinates;console.log(process.env.REACT_APP_MAPS);console.log(this.state);return/*#__PURE__*/React.createElement(Map,{google:this.props.google,style:{width:'100%',height:'100%',position:'relative'},className:'map',center:{lat:12.9292117,lng:77.5696024},initialCenter:{lat:12.9292117,lng:77.5696024},bounds:this.getBounds(),zoom:12},coordinates.map(function(elem){return/*#__PURE__*/React.createElement(Marker,{onClick:_this2.onMarkerClick,onMouseover:_this2.onMouseoverMarker,title:elem['name'],lable:elem['price'],name:elem['price'],position:{lat:Number(elem['lat']),lng:Number(elem['lng'])}});}),/*#__PURE__*/React.createElement(InfoWindow,{marker:this.state.activeMarker,visible:this.state.showingInfoWindow},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,this.state.selectedPlace.title)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Rs. \",this.state.selectedPlace.name))));}}]);return Maps;}(React.Component);export default GoogleApiWrapper({apiKey:process.env.REACT_APP_MAPS})(Maps);","map":{"version":3,"sources":["/home/sandeep/projects/9flats-client/src/components/Listing/Maps.jsx"],"names":["React","Map","InfoWindow","Marker","GoogleApiWrapper","Tooltip","Maps","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onMapClicked","state","console","log","bounds","google","maps","LatLngBounds","i","coordinates","length","temp","Number","extend","process","env","REACT_APP_MAPS","width","height","position","lat","lng","getBounds","map","elem","onMouseoverMarker","title","name","Component","apiKey"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport {Tooltip} from 'react-bootstrap'\n\nclass Maps extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            showingInfoWindow: true,\n            activeMarker: {},\n            selectedPlace: {},\n        };\n    }\n    onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    onMapClicked = (props) => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            })\n        }\n    };\n    onMouseoverMarker(props, marker, e) {\n        console.log(marker)\n    }\n    \n    getBounds(){\n        var bounds = new this.props.google.maps.LatLngBounds();\n        for (var i = 0; i < this.props.coordinates.length; i++) {\n            let temp = {\n                \"lat\":Number(this.props.coordinates[i]['lat']),\n                \"lng\":Number(this.props.coordinates[i]['lng'])\n            }\n            bounds.extend(temp);\n            return bounds\n        }\n    }\n\n  render() {\n    const {coordinates} = this.props\n    console.log(process.env.REACT_APP_MAPS)\n    console.log(this.state)\n    return (\n      <Map google={this.props.google}\n        style={{width: '100%', height: '100%', position: 'relative'}}\n        className={'map'}\n        center={{\n            lat: 12.9292117,\n            lng: 77.5696024\n        }}\n        initialCenter={{\n            lat: 12.9292117,\n            lng: 77.5696024\n        }}\n        bounds={this.getBounds()}\n        zoom={12}>\n        {coordinates.map(elem=>{\n            return (\n                <Marker\n                onClick={this.onMarkerClick}\n                onMouseover={this.onMouseoverMarker}\n                title={elem['name']}\n                lable={elem['price']}\n                name={elem['price']}\n                position={{lat: Number(elem['lat']), lng: Number(elem['lng'])}}>\n                </Marker>\n            )\n        })}\n        <InfoWindow\n        marker={this.state.activeMarker}\n        visible={this.state.showingInfoWindow}>\n            <div>\n            <h1>{this.state.selectedPlace.title}</h1>\n            </div>\n            <div>\n            <h3>Rs. {this.state.selectedPlace.name}</h3>\n            </div>\n        </InfoWindow>\n    </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: (process.env.REACT_APP_MAPS)\n})(Maps)\n\n"]},"metadata":{},"sourceType":"module"}